{"version":3,"sources":["components/Carousel.tsx","App.tsx","index.tsx"],"names":["Carousel","images","step","frameSize","itemWidth","animationDuration","infinite","useState","currentImage","setCurrentImage","imageRigth","imageLeft","length","widthCarousel","isEnd","isStart","className","style","width","map","img","transform","transition","src","alt","type","cn","onClick","nextImage","handlePrevImage","App","sizeImages","setSizeImages","setStep","setFrameSize","setAnimationDuration","isInfinite","setIsInfinite","value","min","max","onChange","event","target","checked","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.32d9d299.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport cn from 'classnames';\nimport './Carousel.scss';\n\ntype Props = {\n  images: string[],\n  step: number,\n  frameSize: number,\n  itemWidth: number,\n  animationDuration: number,\n  infinite: boolean,\n};\n\nconst Carousel: React.FC<Props> = ({\n  images,\n  step,\n  frameSize,\n  itemWidth,\n  animationDuration,\n  infinite,\n}) => {\n  const [currentImage, setCurrentImage] = useState(1);\n  const imageRigth = (currentImage - 1) * itemWidth;\n  const imageLeft = images.length - frameSize + 1;\n\n  const widthCarousel = frameSize * itemWidth;\n  const isEnd = currentImage === imageLeft;\n  const isStart = currentImage === 1;\n\n  const handleNextImage = () => {\n    if (!isEnd) {\n      const nextImage = currentImage + step;\n\n      setCurrentImage(nextImage > imageLeft\n        ? imageLeft\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(1);\n    }\n  };\n\n  const handlePrevImage = () => {\n    if (!isStart) {\n      const nextImage = currentImage - step;\n\n      setCurrentImage(nextImage < 1\n        ? 1\n        : nextImage);\n    } else if (infinite) {\n      setCurrentImage(imageLeft);\n    }\n  };\n\n  return (\n    <div className=\"Carousel\">\n      <ul\n        className=\"Carousel__list\"\n        style={{ width: widthCarousel }}\n      >\n        {images.map((img) => (\n          <li\n            key={img}\n            className=\"Carousel__list--link\"\n            style={{\n              transform: `translateX(-${imageRigth}px)`,\n              transition: `${animationDuration}ms`,\n            }}\n          >\n            <img\n              src={img}\n              alt={img}\n              style={{\n                width: `${itemWidth}px`,\n              }}\n            />\n          </li>\n        ))}\n      </ul>\n\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={cn(\n            'button',\n            { 'button--disabled': (isStart && !infinite) },\n          )}\n          onClick={() => handlePrevImage()}\n        >\n          {'<<'}\n        </button>\n\n        <button\n          className={cn(\n            'button',\n            { 'button--disabled': (isEnd && !infinite) },\n          )}\n          type=\"button\"\n          onClick={handleNextImage}\n        >\n          {'>>'}\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default Carousel;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport Carousel from './components/Carousel';\n\ninterface State {\n  images: string[];\n}\n\nconst App: React.FC = () => {\n  const state: State = {\n    images: [\n      './img/1.png',\n      './img/2.png',\n      './img/3.png',\n      './img/4.png',\n      './img/5.png',\n      './img/6.png',\n      './img/7.png',\n      './img/8.png',\n      './img/9.png',\n      './img/10.png',\n    ],\n  };\n\n  const { images } = state;\n  const [sizeImages, setSizeImages] = useState(130);\n  const [step, setStep] = useState(3);\n  const [frameSize, setFrameSize] = useState(3);\n  const [animationDuration, setAnimationDuration] = useState(1000);\n  const [isInfinite, setIsInfinite] = useState(false);\n\n  return (\n    <div className=\"App\">\n      <h1>{`Carousel with ${images.length} images`}</h1>\n\n      <div className=\"App__inputs\">\n        <label>\n          Size images, px\n          <input\n            type=\"number\"\n            value={sizeImages}\n            min={10}\n            max={200}\n            onChange={(event) => setSizeImages(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Step per images\n          <input\n            type=\"number\"\n            value={step}\n            min={1}\n            max={10}\n            onChange={(event) => setStep(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Frame size\n          <input\n            type=\"number\"\n            value={frameSize}\n            min={1}\n            max={10}\n            onChange={(event) => setFrameSize(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Anumation, ms\n          <input\n            type=\"number\"\n            value={animationDuration}\n            min={500}\n            max={3000}\n            onChange={(event) => setAnimationDuration(+event.target.value)}\n          />\n        </label>\n\n        <label>\n          Infinite:\n          <input\n            type=\"checkbox\"\n            checked={isInfinite}\n            onChange={(event) => setIsInfinite(event.target.checked)}\n          />\n        </label>\n      </div>\n\n      <Carousel\n        images={images}\n        step={step}\n        frameSize={frameSize}\n        itemWidth={sizeImages}\n        animationDuration={animationDuration}\n        infinite={isInfinite}\n      />\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}